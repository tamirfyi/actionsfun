# A runner is a server that runs your workflow when they are triggered

# Name your workflow
name: advanced-workflow

# EVENT & TRIGGERS
# - events can originate from github
# - events can also run on a schedule
# - events can be triggered via a REST API
on:
  push:
    branches:
      - 'main'
      - 'feat/**'

  pull_request:
    types:
      - opened
    branches:
      - 'main'

  # special event to allow you to manually run an action
  workflow_dispatch:

# JOB - a set of steps in a workflow executed on the same runner
# - each step is either a shell script or action
# - steps are executed in order and depend on each other
# by default they have no dependencies and run in parallel
# - can share data from one step to another (using needs: <job name>)
jobs:
  hello-world:
    runs-on: ubuntu-latest
    steps:
      # ACTIONS - an action is a custom application for gh actions that performs complex but frequent task
      - uses: actions/checkout@v4
      - name: hello world
        run: echo "hello world"
  check-bats-version:
    runs-on: ubuntu-latest # specify image for job
    steps:
      - uses: actions/checkout@v4
      # ACTIONS - this action sets up nodejs on the runner
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: install bats
        # RUN A SCRIPT - run a script/bash command with the 'run' keyword
        run: npm i -g bats
      - name: display bats version
        run: bats -v
      - name: test env variable
        # ENV VARS - environment variables can be defined in each step
        env:
          VAR_STRING: 'this is a var string'
        run: echo ${{ env.VAR_STRING }}
  # ARTIFACT - if you want to share files with another job, you must store them as an artifact
  # artifacts are files created when you build and test your code
  # i.e. binary or package files, test resulsts, screenshots, or log files
  # associated with workflow run and can be used by another job
  create-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: create output log
        run: expr 1 + 1 > output.log
      - name: upload output file
        # artifact action
        uses: actions/upload-artifact@v4.3.3
        # must assign artifact a name, and specify its path
        with:
          name: output-log-file
          path: output.log
  download-artifact:
    needs: create-artifact # in order for artifacts to work, you need to establish a dependency between jobs
    runs-on: ubuntu-latest
    env:
      MY_NULL: ${{ null }}
      # EXAMPLE EXPRESSIONS
      # EX_TERNARY: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}

    steps:
      - name: download artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: output-log-file # specify assigned artifact name to download

  # EXPRESSIONS - programatically set env variables in workflow files and access contexts
  # commonly used with the `if` conditional to determine whether a step should run
  # use the ${{}} syntax in the env section of your job to tell GH to evaluate an expression rather than a string

  expression-job:
    runs-on: ubuntu-latest
    steps:
      - name: 'echo github ref'
        # IF conditional is included for individual steps, not, jobs
        if: ${{ github.ref == 'refs/head/feat/expression' }}
        run: echo ${{github.ref}}

  # CONTEXTS - way to access information about workflow runs, variables, runner envs, jobs, and steps
  # each context is an object with properties that are strings or other objects

  trying-context:
    runs-on: ubuntu-latest
    env:
      MY_VAR: this is my var
    steps:
      - name: var context
        run: echo my var = ${{env.MY_VAR}}
      - name: github context
        run: echo run number = ${{github.run_number}}
      - name: secrets context
        run: echo ${{secrets.GITHUB_TOKEN}}
